{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gundy/Documents/projects/MI-449/MI-449-css-spacing-and-layout/utils/intersection-observer.tsx\";\nimport { createContext, useContext, useEffect, useRef, useState } from 'react';\nconst ObserverContext = /*#__PURE__*/createContext(null);\nexport const ObserverProvider = ({\n  children\n}) => {\n  const observer = useObserverProvider();\n  return /*#__PURE__*/_jsxDEV(ObserverContext.Provider, {\n    value: observer,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\nexport const useObserver = () => {\n  return useContext(ObserverContext);\n};\n\nconst useObserverProvider = () => {\n  const {\n    0: isVisible,\n    1: setVisible\n  } = useState(true);\n  const ref = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.unobserve(ref.current);\n  }, [ref]);\n  useEffect(() => {\n    if (isVisible && ref.current) {\n      ref.current.classList.add('fade-in');\n    }\n  }, [isVisible]);\n  return {\n    ref,\n    isVisible\n  };\n};","map":{"version":3,"sources":["/home/gundy/Documents/projects/MI-449/MI-449-css-spacing-and-layout/utils/intersection-observer.tsx"],"names":["createContext","useContext","useEffect","useRef","useState","ObserverContext","ObserverProvider","children","observer","useObserverProvider","useObserver","isVisible","setVisible","ref","IntersectionObserver","entries","forEach","entry","isIntersecting","current","observe","unobserve","classList","add"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,MAA/C,EAAuDC,QAAvD,QAAuE,OAAvE;AAEA,MAAMC,eAAe,gBAAGL,aAAa,CAAC,IAAD,CAArC;AAEA,OAAO,MAAMM,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAMC,QAAQ,GAAGC,mBAAmB,EAApC;AACA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAED,QAAjC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPM;AASP,OAAO,MAAMG,WAAW,GAAG,MAAM;AAC/B,SAAOT,UAAU,CAACI,eAAD,CAAjB;AACD,CAFM;;AAIP,MAAMI,mBAAmB,GAAG,MAAM;AAChC,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMS,GAAG,GAAGV,MAAM,CAAC,IAAD,CAAlB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAG,IAAIM,oBAAJ,CAA0BC,OAAD,IAAa;AACrDA,MAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAWL,UAAU,CAACK,KAAK,CAACC,cAAP,CAArC;AACD,KAFgB,CAAjB;;AAGA,QAAIL,GAAG,CAACM,OAAR,EAAiB;AACfX,MAAAA,QAAQ,CAACY,OAAT,CAAiBP,GAAG,CAACM,OAArB;AACD;;AACD,WAAO,MAAMX,QAAQ,CAACa,SAAT,CAAmBR,GAAG,CAACM,OAAvB,CAAb;AACD,GARQ,EAQN,CAACN,GAAD,CARM,CAAT;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,SAAS,IAAIE,GAAG,CAACM,OAArB,EAA8B;AAC5BN,MAAAA,GAAG,CAACM,OAAJ,CAAYG,SAAZ,CAAsBC,GAAtB,CAA0B,SAA1B;AACD;AACF,GAJQ,EAIN,CAACZ,SAAD,CAJM,CAAT;AAMA,SAAO;AACLE,IAAAA,GADK;AAELF,IAAAA;AAFK,GAAP;AAID,CAvBD","sourcesContent":["import { createContext, useContext, useEffect, useRef, useState } from 'react';\n\nconst ObserverContext = createContext(null);\n\nexport const ObserverProvider = ({ children }) => {\n  const observer = useObserverProvider();\n  return (\n    <ObserverContext.Provider value={observer}>\n      {children}\n    </ObserverContext.Provider>\n  );\n};\n\nexport const useObserver = () => {\n  return useContext(ObserverContext);\n};\n\nconst useObserverProvider = () => {\n  const [isVisible, setVisible] = useState(true);\n  const ref = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => setVisible(entry.isIntersecting));\n    });\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => observer.unobserve(ref.current);\n  }, [ref]);\n\n  useEffect(() => {\n    if (isVisible && ref.current) {\n      ref.current.classList.add('fade-in');\n    }\n  }, [isVisible]);\n\n  return {\n    ref,\n    isVisible,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}