{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useEffect, useRef, useState } from 'react';\nconst ObserverContext = /*#__PURE__*/createContext(null);\nexport const ObserverProvider = ({\n  children\n}) => {\n  const observer = useObserverProvider();\n  return /*#__PURE__*/_jsx(ObserverContext.Provider, {\n    value: observer,\n    children: children\n  });\n};\nexport const useObserver = () => {\n  return useContext(ObserverContext);\n};\n\nconst useObserverProvider = () => {\n  const {\n    0: isVisible,\n    1: setVisible\n  } = useState(true);\n  const ref = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n\n    if (ref.current) {\n      observer.observe(ref.current);\n      return () => observer.unobserve(ref.current);\n    }\n  }, [ref]);\n  useEffect(() => {\n    if (isVisible && ref.current) {\n      ref.current.classList.add('fade-in');\n    }\n  }, [isVisible]);\n  return {\n    ref,\n    isVisible\n  };\n};","map":null,"metadata":{},"sourceType":"module"}